version: '3.8'

services:
  # NASA Data Ingestion Service
  nasa-data-ingest:
    build: 
      context: ./services/nasa-data-ingest
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - NASA_EARTHDATA_USERNAME=${NASA_EARTHDATA_USERNAME}
      - NASA_EARTHDATA_PASSWORD=${NASA_EARTHDATA_PASSWORD}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://agri_user:secure_password@postgresql:5432/agri_data
    depends_on:
      - redis
      - postgresql
    volumes:
      - ./data/nasa_raw:/app/data
      - ./logs/nasa-ingest:/app/logs
    restart: unless-stopped
    
  # Data Fusion Engine
  data-fusion-engine:
    build: 
      context: ./services/data-fusion-engine
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://agri_user:secure_password@postgresql:5432/agri_data
      - REDIS_URL=redis://redis:6379
      - NASA_DATA_INGEST_URL=http://nasa-data-ingest:8000
    depends_on:
      - postgresql
      - redis
      - nasa-data-ingest
    volumes:
      - ./models:/app/models
      - ./data/processed:/app/data
    restart: unless-stopped
    
  # Real-time Analytics API
  analytics-api:
    build: 
      context: ./services/analytics-api
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - FUSION_SERVICE_URL=http://data-fusion-engine:8000
      - DATABASE_URL=postgresql://agri_user:secure_password@postgresql:5432/agri_data
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - data-fusion-engine
    restart: unless-stopped
    
  # AR Visualization Service
  ar-service:
    build: 
      context: ./services/ar-service
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - ANALYTICS_API_URL=http://analytics-api:8000
    depends_on:
      - analytics-api
    volumes:
      - ./ar-assets:/app/assets
    restart: unless-stopped
    
  # WebSocket Real-time Service
  websocket-service:
    build: 
      context: ./services/websocket-service
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment:
      - ANALYTICS_API_URL=http://analytics-api:8000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - analytics-api
      - redis
    restart: unless-stopped
    
  # Database Services
  postgresql:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: agri_data
      POSTGRES_USER: agri_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - analytics-api
      - ar-service
      - websocket-service
    restart: unless-stopped
    
  # Monitoring & Logging
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
